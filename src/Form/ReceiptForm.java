/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Controller.HoaDonController;
import DBObject.SQLTable;
import MainView.EmployeeHome;
import MainView.ManagerHome;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author DangT
 */
public class ReceiptForm extends javax.swing.JFrame {

    /**
     * Creates new form ReceiptForm
     */
    public ReceiptForm() {
        SQLTable table = new SQLTable();
        initComponents();
        set_TableVe();
        set_TableGG();
    }
    
    private void set_TableVe() {
        String query = "select * from VE";
        
        int Col = SQLTable.getLength("VE");
        int Row = SQLTable.getSize("VE");
        
        Object[][] data = new Object[Row][Col];
        
        try {
            Statement statement = SQLTable.connection.createStatement();
            ResultSet rs = statement.executeQuery(query);
            
            int i = 0;
            while (rs.next()) {      
                data[i++] = SQLTable.getProperties("VE", rs);
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        finally {
            Table_Ve.setModel(new DefaultTableModel(data, SQLTable.ColumnName("VE")) { 
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }  
            });
        }
    } 
    
    private void set_TableGG() {
        String query = "select * from GIAMGIA";
        
        int Col = SQLTable.getLength("GIAMGIA");
        int Row = SQLTable.getSize("GIAMGIA");
        
        Object[][] data = new Object[Row][Col];
        
        try {
            Statement statement = SQLTable.connection.createStatement();
            ResultSet rs = statement.executeQuery(query);
            
            int i = 0;
            while (rs.next()) {      
                data[i++] = SQLTable.getProperties("GIAMGIA", rs);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManagerHome.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            Table_GiamGia.setModel(new DefaultTableModel(data, SQLTable.ColumnName("GIAMGIA")) { 
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }  
            });
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane_GG = new javax.swing.JScrollPane();
        Table_GiamGia = new javax.swing.JTable();
        btn_Create = new javax.swing.JButton();
        ScrollPane_GiamGia = new javax.swing.JScrollPane();
        Table_Ve = new javax.swing.JTable();
        lb_KhachHangTitle = new javax.swing.JLabel();
        Icon_Search = new javax.swing.JLabel();
        tf_SearchVe = new javax.swing.JTextField();
        tf_SearchGG = new javax.swing.JTextField();
        Icon_Search1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CREATE RECEIPT FORM");
        setResizable(false);

        Table_GiamGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ScrollPane_GG.setViewportView(Table_GiamGia);

        btn_Create.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_Create.setText("Create");
        btn_Create.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_CreateMouseClicked(evt);
            }
        });

        Table_Ve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ScrollPane_GiamGia.setViewportView(Table_Ve);

        lb_KhachHangTitle.setBackground(new java.awt.Color(255, 255, 255));
        lb_KhachHangTitle.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lb_KhachHangTitle.setForeground(new java.awt.Color(120, 168, 252));
        lb_KhachHangTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_KhachHangTitle.setText("RECEIPT ");
        lb_KhachHangTitle.setToolTipText("");

        Icon_Search.setBackground(new java.awt.Color(255, 255, 255));
        Icon_Search.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Icon_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_search.png"))); // NOI18N
        Icon_Search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tf_SearchVe.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tf_SearchVe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tf_SearchVe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_SearchVeKeyTyped(evt);
            }
        });

        tf_SearchGG.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        tf_SearchGG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tf_SearchGG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_SearchGGKeyTyped(evt);
            }
        });

        Icon_Search1.setBackground(new java.awt.Color(255, 255, 255));
        Icon_Search1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Icon_Search1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ic_search.png"))); // NOI18N
        Icon_Search1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Icon_Search1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(tf_SearchGG))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Icon_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(tf_SearchVe))
                            .addComponent(ScrollPane_GiamGia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                            .addComponent(ScrollPane_GG, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btn_Create, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(lb_KhachHangTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_KhachHangTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Icon_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_SearchVe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Create, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScrollPane_GiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Icon_Search1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_SearchGG, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScrollPane_GG, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tf_SearchVeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_SearchVeKeyTyped
        Table_Ve.setAutoCreateRowSorter(true);
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(Table_Ve.getModel());
        Table_Ve.setRowSorter(sorter);

        tf_SearchVe.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = tf_SearchVe.getText();

                if (text.trim().length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = tf_SearchVe.getText();

                if (text.trim().length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        });
    }//GEN-LAST:event_tf_SearchVeKeyTyped

    private void tf_SearchGGKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_SearchGGKeyTyped
        Table_GiamGia.setAutoCreateRowSorter(true);
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(Table_GiamGia.getModel());
        Table_GiamGia.setRowSorter(sorter);

        tf_SearchGG.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = tf_SearchGG.getText();

                if (text.trim().length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = tf_SearchGG.getText();

                if (text.trim().length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet.");
            }
        });
    }//GEN-LAST:event_tf_SearchGGKeyTyped

    private void btn_CreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_CreateMouseClicked
        int RowID_Ve = Table_Ve.getSelectedRow();
        int RowID_GG = Table_GiamGia.getSelectedRow();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        
        String MaVe = (String) Table_Ve.getValueAt(RowID_Ve, 0);
        String MaGG = "";
        try {
            if (Table_GiamGia.getValueAt(RowID_GG, 0) != null)
                MaGG = (String) Table_GiamGia.getValueAt(RowID_GG, 0);
        }
        catch (Exception ex) {
            MaGG = "";
        }
        String MaNV = EmployeeHome.MaNV;
        String MaKH = (String) Table_Ve.getValueAt(RowID_Ve, 2);
        String today = format.format(new Date());
        String TongTien = Integer.toString(((int) Table_Ve.getValueAt(RowID_Ve, 5)) + ((int) Table_Ve.getValueAt(RowID_Ve, 6)));
        String ID = getID();
        
        Object[] data = {ID, MaNV, MaKH, MaVe, MaGG, TongTien, today};
        HoaDonController.add(data);
    }//GEN-LAST:event_btn_CreateMouseClicked

    private String getID() {
        String res = "HD";
        try {
            Statement statement = SQLTable.connection.createStatement();
            ResultSet rs = statement.executeQuery("SELECT SEQ_HOADON.NEXTVAL FROM dual");  
            while (rs.next()) {
                res += rs.getInt(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ComboForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally {
            return res;
        }  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReceiptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReceiptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReceiptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceiptForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReceiptForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Icon_Search;
    private javax.swing.JLabel Icon_Search1;
    private javax.swing.JScrollPane ScrollPane_GG;
    private javax.swing.JScrollPane ScrollPane_GiamGia;
    private javax.swing.JTable Table_GiamGia;
    private javax.swing.JTable Table_Ve;
    private javax.swing.JButton btn_Create;
    private javax.swing.JLabel lb_KhachHangTitle;
    private javax.swing.JTextField tf_SearchGG;
    private javax.swing.JTextField tf_SearchVe;
    // End of variables declaration//GEN-END:variables
}
